<?php

/**
 * @file
 * Contains the Foundation GSCF 2019 theme.
 */

use Drupal\Component\Utility\Html;


/**
 * Implements HOOK_theme_suggestions_page_alter().
 */
function fd_themename_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__' . $node->bundle();
  }
}


/**
 * Implements HOOK_preprocess_html().
 *
 * Add body classes based on sidebar regions
 * Update: Also add Google Search meta tag on the front page
 */
function fd_themename_preprocess_html(&$variables) {
  
  // Add page alias as a class to body
  $path = Drupal::service('path.current')->getPath();
  
  $alias = trim(Drupal::service('path.alias_manager')
    ->getAliasByPath($path), '/');
  $alias_class = preg_replace("/\//", '-', $alias);
  if (!empty($alias_class) && strpos($alias_class, 'node') !== 0) {
    $variables['attributes']['class'][] = Html::cleanCssIdentifier('alias--' . $alias_class);
  }
  
  // Add node id as a class to body
  if ($node = \Drupal::request()->attributes->get('node')) {
    $variables['attributes']['class'][] = 'page-node-' . $node->id();
  }
  
  // Add information about the number of sidebars.
  // AE: This does not honour the blocks that are hidden when there are no
  //     results. At the time of writing, I don't really have another
  //     solution yet. Watch this space
  // AE: Update - access to these blocks are forbidden as well. The only thing
  //     I can think of to solve this is to embed the views into a coded block
  //     that would not even build if the right fields are not set. I'll try
  //     and get back to this, but moving onto more priority bugs for now.
  // AE: Update #2 - The markup from page.html.twig still renders even if the
  //     view blocks are completely disabled. These classes still work then tho
  if (!empty($variables['page']['sidebar_first']) && !empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'has-both-sidebars';
  }
  elseif (!empty($variables['page']['sidebar_first'])) {
    $variables['attributes']['class'][] = 'has-one-sidebar';
    $variables['attributes']['class'][] = 'has-sidebar-first';
  }
  elseif (!empty($variables['page']['sidebar_second'])) {
    $variables['attributes']['class'][] = 'has-one-sidebar';
    $variables['attributes']['class'][] = 'has-sidebar-second';
  }
  else {
    $variables['attributes']['class'][] = 'has-no-sidebars';
  }
  
//  // AE: Google front page meta information into head (top)
//  if (Drupal::service('path.matcher')->isFrontPage()) {
//    $google_site_verification = [
//      '#tag' => 'meta',
//      '#attributes' => [
//        'name' => 'google-site-verification',
//        'content' => 'Oe6hkOW6y2afLYXSfzKTSU-YN75aKjBtnYqdQopGikU',
//      ],
//    ];
//
//    $variables['page']['#attached']['html_head'][] = [
//      $google_site_verification,
//      'google-site-verification',
//    ];
//  }
  
  // kint($variables);
}

/**
 * Implements hook_form_alter().
 */
function fd_themename_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  // Add placeholder to header search box.
  if ($form['#id'] == 'search-block-form') {
    $form['keys']['#attributes'] = ['placeholder' => t('Search')];
  }


}

/**
 * Implements hook_preprocess_HOOK().
 */
function fd_themename_preprocess_page_title(&$variables) {

  $current_path = \Drupal::request()->getpathInfo();
  if ($current_path == '/search/node') {
    if (\Drupal::request()->query->has('keys')) {

      // Get the searched string.
      $keywords = \Drupal::request()->query->get('keys');

      // As of https://drupal.stackexchange.com/a/232304/15055 we probably
      // need to ensure the cache gets busted.
      $variables['#cache']['contexts'][] = 'url.query_args:keys';

      // Set the new title.
      $new_title = new \Drupal\Core\StringTranslation\TranslatableMarkup('Search results for "@keywords"', ['@keywords' => $keywords]);
      $variables['title'] = $new_title;
    }
  }
}

/**
 * Implements hook_theme_suggestions_taxonomy_term_alter().
 *
 * Provide template suggestions based on the view mode of taxonomy terms
 */
function fd_themename_theme_suggestions_taxonomy_term_alter(array &$suggestions, array $variables) {
  $term                = $variables['elements']['#taxonomy_term'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');
  // Add view mode theme suggestions.
  $suggestions[] = 'taxonomy_term__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'taxonomy_term__' . $term->id() . '__' . $sanitized_view_mode;
}
